import WizardScene from 'telegraf/scenes/wizard'
import { deleteMessages, deleteAfter } from '@/helper'

type F = {
    name: string
    errorHandler: (...agrs: any[]) => any
}

export default (_bot: any) => {
    return ({ name, errorHandler }: F) => new WizardScene(
        name,
        errorHandler(async (ctx: any) => {
            ctx.wizard.state.messages = []
            ctx.wizard.state.errorCount = 0
            const { message_id } = await ctx.reply('–í–≤–µ–¥—ñ—Ç—å –ø–æ—à—Ç—É –¥–æ –ø–æ—Ä—Ç–∞–ª—É OYI \n\n üõë –ó–∞—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è: —É—Å—ñ –¥–∞–Ω—ñ, —â–æ –±—É–¥—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—å –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è, –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ –Ω–µ–∑–∞—Ö–∏—â–µ–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ, —Ç–∞–∫ —è–∫ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± —Å–∏—Å—Ç–µ–º–∞ –≤–∏–∫–æ–Ω—É–≤–∞–ª–∞ —Ä—É—Ç–∏–Ω–Ω—É —Ä–æ–±–æ—Ç—É, –¥–ª—è –Ω–µ—ó –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –≤–∞—à–∏–º–∏ –æ—Å–æ–±–∏—Å—Ç–∏–º–∏ –æ–±–ª—ñ–∫–æ–≤–∏–º–∏ –∑–∞–ø–∏—Å–∞–º–∏.');
            ctx.wizard.state.messages.push(message_id)
            return ctx.wizard.next();
        }),
        errorHandler(async (ctx: any) => {
            if (!ctx.message.text.includes('@otakoyi')) {
                ctx.wizard.state.errorCount += 1
                const { message_id } = await ctx.reply('–¶–µ –Ω–µ –≤—ñ—Ä–Ω–∞ –ø–æ—à—Ç–∞');
                ctx.wizard.state.messages.push(message_id)
    
                if(ctx.wizard.state.errorCount > 2) {
                    await deleteMessages(ctx, ctx.wizard.state.messages, 1);
                    await deleteAfter(ctx.reply('–°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ!'), ctx, 5);
                    return ctx.scene.leave();
                }
                return; 
            }
            ctx.wizard.state.login = ctx.message.text;
            const { message_id } = await ctx.reply('–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–æ –ø–æ—Ä—Ç–∞–ª—É OYI \n\n üõë –ó–∞—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è: —É—Å—ñ –¥–∞–Ω—ñ, —â–æ –±—É–¥—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—å –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è, –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ –Ω–µ–∑–∞—Ö–∏—â–µ–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ, —Ç–∞–∫ —è–∫ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± —Å–∏—Å—Ç–µ–º–∞ –≤–∏–∫–æ–Ω—É–≤–∞–ª–∞ —Ä—É—Ç–∏–Ω–Ω—É —Ä–æ–±–æ—Ç—É, –¥–ª—è –Ω–µ—ó –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –≤–∞—à–∏–º–∏ –æ—Å–æ–±–∏—Å—Ç–∏–º–∏ –æ–±–ª—ñ–∫–æ–≤–∏–º–∏ –∑–∞–ø–∏—Å–∞–º–∏.');
            ctx.wizard.state.messages.push(message_id)
            return ctx.wizard.next();
        }),
        errorHandler(async (ctx: any) => {
            ctx.wizard.state.password = ctx.message.text;
            /** */
            ctx.session.login = ctx.wizard.state.login;
            ctx.session.password = ctx.wizard.state.password;
            
            await deleteAfter(ctx.reply('–í–∞—à—ñ –¥–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω—ñ! –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–π—Ç–∏ —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é —Ç–∞ –∑–∞–ª–æ–≥—É–≤–∞—Ç–∏—Å—å —É –ø–æ—Ä—Ç–∞–ª.'), ctx, 5);
            await deleteMessages(ctx, ctx.wizard.state.messages);
    
            return ctx.scene.leave();
        }),
    );
}